/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.45
 * Generated at: 2024-03-28 16:30:45 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class addPatient_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("    <title>Add New Patient</title>\n");
      out.write("    <script>\n");
      out.write("        function validateForm() {\n");
      out.write("            var birthdate = new Date(document.forms[\"patientForm\"][\"BIRTHDATE\"].value);\n");
      out.write("            var deathdate = new Date(document.forms[\"patientForm\"][\"DEATHDATE\"].value);\n");
      out.write("            var today = new Date();\n");
      out.write("            if (birthdate > today) {\n");
      out.write("                alert(\"Birthdate cannot be in the future.\");\n");
      out.write("                return false;\n");
      out.write("            }\n");
      out.write("            if (deathdate && birthdate && deathdate < birthdate) {\n");
      out.write("                alert(\"Death date cannot be before the birth date.\");\n");
      out.write("                return false;\n");
      out.write("            }\n");
      out.write("            if (deathdate && deathdate > today) {\n");
      out.write("                alert(\"Death date cannot be in the future.\");\n");
      out.write("                return false;\n");
      out.write("            }\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        function capitalizeFirstLetter(string) {\n");
      out.write("            return string.split(' ').map(function(word) {\n");
      out.write("                return word.charAt(0).toUpperCase() + word.slice(1).toLowerCase();\n");
      out.write("            }).join(' ');\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        function formatInput(event) {\n");
      out.write("            const id = event.target.id.toUpperCase();\n");
      out.write("            let value = event.target.value;\n");
      out.write("            value = value.replace(/-/g, \"_\").replace(/[^\\w\\s'. _]/g, \"\");\n");
      out.write("            if (id === \"ETHNICITY\" || id === \"RACE\") {\n");
      out.write("                event.target.value = value.toLowerCase();\n");
      out.write("            } else {\n");
      out.write("                event.target.value = capitalizeFirstLetter(value);\n");
      out.write("            }\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        function generateUUID() {\n");
      out.write("            return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n");
      out.write("                var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n");
      out.write("                return v.toString(16);\n");
      out.write("            });\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        document.addEventListener('DOMContentLoaded', (event) => {\n");
      out.write("            document.getElementById('ID').value = generateUUID();\n");
      out.write("            document.getElementById('DRIVERS').value = 'S';\n");
      out.write("            document.getElementById('PASSPORT').value = 'X';\n");
      out.write("        });\n");
      out.write("    </script>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("<h2>Add New Patient</h2>\n");
      out.write("<form name=\"patientForm\" action=\"/addPatientServlet\" onsubmit=\"return validateForm()\" method=\"post\">\n");
      out.write("    <label for=\"ID\">ID*:</label><br>\n");
      out.write("    <input type=\"text\" id=\"ID\" name=\"ID\" readonly><br>\n");
      out.write("\n");
      out.write("    <label for=\"BIRTHDATE\">Birthdate (yyyy-mm-dd)*:</label><br>\n");
      out.write("    <input type=\"date\" id=\"BIRTHDATE\" name=\"BIRTHDATE\" required><br>\n");
      out.write("\n");
      out.write("    <label for=\"DEATHDATE\">Death Date (yyyy-mm-dd):</label><br>\n");
      out.write("    <input type=\"date\" id=\"DEATHDATE\" name=\"DEATHDATE\"><br>\n");
      out.write("\n");
      out.write("    <label for=\"SSN\">SSN (ddd-dd-dddd)*:</label><br>\n");
      out.write("    <input type=\"text\" id=\"SSN\" name=\"SSN\" pattern=\"\\d{3}-\\d{2}-\\d{4}\" required><br>\n");
      out.write("\n");
      out.write("    <label for=\"DRIVERS\">Driver's License (S followed by 8 digits)*:</label><br>\n");
      out.write("    <input type=\"text\" id=\"DRIVERS\" name=\"DRIVERS\" pattern=\"S\\d{8}\" required maxlength=\"9\"><br>\n");
      out.write("\n");
      out.write("    <label for=\"PASSPORT\">Passport (X followed by 8 digits and ending with X)*:</label><br>\n");
      out.write("    <input type=\"text\" id=\"PASSPORT\" name=\"PASSPORT\" pattern=\"X\\d{8}X\" required maxlength=\"10\"><br>\n");
      out.write("\n");
      out.write("    <label for=\"PREFIX\">Prefix:</label><br>\n");
      out.write("    <select id=\"PREFIX\" name=\"PREFIX\">\n");
      out.write("        <option value=\"\">Select</option>\n");
      out.write("        <option value=\"Mr.\">Mr.</option>\n");
      out.write("        <option value=\"Ms.\">Ms.</option>\n");
      out.write("        <option value=\"Mrs.\">Mrs.</option>\n");
      out.write("        <option value=\"Dr.\">Dr.</option>\n");
      out.write("    </select><br>\n");
      out.write("\n");
      out.write("\n");
      out.write("    <label for=\"FIRST\">First Name*:</label><br>\n");
      out.write("    <input type=\"text\" id=\"FIRST\" name=\"FIRST\" required oninput=\"formatInput(event)\"><br>\n");
      out.write("\n");
      out.write("    <label for=\"LAST\">Last Name*:</label><br>\n");
      out.write("    <input type=\"text\" id=\"LAST\" name=\"LAST\" required oninput=\"formatInput(event)\"><br>\n");
      out.write("\n");
      out.write("    <label for=\"SUFFIX\">Suffix:</label><br>\n");
      out.write("    <input type=\"text\" id=\"SUFFIX\" name=\"SUFFIX\" oninput=\"formatInput(event)\"><br>\n");
      out.write("\n");
      out.write("    <label for=\"MAIDEN\">Maiden Name:</label><br>\n");
      out.write("    <input type=\"text\" id=\"MAIDEN\" name=\"MAIDEN\" oninput=\"formatInput(event)\"><br>\n");
      out.write("\n");
      out.write("    <label for=\"MARITAL\">Marital Status:</label><br>\n");
      out.write("    <select id=\"MARITAL\" name=\"MARITAL\">\n");
      out.write("        <option value=\"\">Select</option>\n");
      out.write("        <option value=\"M\">Married</option>\n");
      out.write("        <option value=\"S\">Single</option>\n");
      out.write("    </select><br>\n");
      out.write("\n");
      out.write("    <label for=\"RACE\">Race*:</label><br>\n");
      out.write("    <input type=\"text\" id=\"RACE\" name=\"RACE\" required oninput=\"formatInput(event)\"><br>\n");
      out.write("\n");
      out.write("    <label for=\"ETHNICITY\">Ethnicity*:</label><br>\n");
      out.write("    <input type=\"text\" id=\"ETHNICITY\" name=\"ETHNICITY\" required oninput=\"formatInput(event)\"><br>\n");
      out.write("\n");
      out.write("    <label for=\"GENDER\">Gender*:</label><br>\n");
      out.write("    <select id=\"GENDER\" name=\"GENDER\" required>\n");
      out.write("        <option value=\"\">Select</option>\n");
      out.write("        <option value=\"M\">Male</option>\n");
      out.write("        <option value=\"F\">Female</option>\n");
      out.write("    </select><br>\n");
      out.write("\n");
      out.write("    <label for=\"BIRTHPLACE\">Birthplace*:</label><br>\n");
      out.write("    <input type=\"text\" id=\"BIRTHPLACE\" name=\"BIRTHPLACE\" required oninput=\"formatInput(event)\"><br>\n");
      out.write("\n");
      out.write("    <label for=\"ADDRESS\">Address*:</label><br>\n");
      out.write("    <input type=\"text\" id=\"ADDRESS\" name=\"ADDRESS\" required oninput=\"formatInput(event)\"><br>\n");
      out.write("\n");
      out.write("    <label for=\"CITY\">City*:</label><br>\n");
      out.write("    <input type=\"text\" id=\"CITY\" name=\"CITY\" required oninput=\"formatInput(event)\"><br>\n");
      out.write("\n");
      out.write("    <label for=\"STATE\">State*:</label><br>\n");
      out.write("    <input type=\"text\" id=\"STATE\" name=\"STATE\" required oninput=\"formatInput(event)\"><br>\n");
      out.write("\n");
      out.write("    <label for=\"ZIP\">ZIP Code*:</label><br>\n");
      out.write("    <input type=\"text\" id=\"ZIP\" name=\"ZIP\" pattern=\"\\d{5}\" required><br>\n");
      out.write("\n");
      out.write("    <input type=\"submit\" value=\"Add Patient\">\n");
      out.write("</form>\n");
      out.write("</body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
